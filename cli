#!/usr/bin/env bash

set -e
export ENVROOT=$(cd $(dirname $0) && pwd)
export __log__=$ENVROOT/bin/log

usage() {
	cli_name=${0##*/}
	echo "
$cli_name
your env CLI
version: $(cat $ENVROOT/VERSION)
usage: $cli_name [options] [command [command's options]]

options:
    -e | --env :  Define environment that cli with take action on
                  Environment: Possible values ['dev', 'test']
                  Avoiding conflict data, accidentally delete dev data when running test

commands:
    docker    Up and running dockers container
              All possible containers a listed in etc/docker
              Will create volume for corresponding containers in proc/<ENV>/docker

    *         Help
"
	exit 1
}

# Handle the environment settings
# Default environment will be dev
# Use options -e | --env to set environment
# Only accept dev | test
set -e
export ENV='dev'

env() {
	ENV=$1

	if [[ -z "$ENV" ]]; then
		ENV="dev"
	fi

	if [[ "$ENV" != "dev" ]] && [[ "$ENV" != "test" ]]; then
		echo "-e only accept values ['dev', 'test']"
		exit 1
	fi

	set -e
	export ENV="$ENV"
}

while [ "$1" != "" ]; do
	case $1 in
	-e | --env)
		shift
		env $1
		;;

	docker)
		shift
		$__log__ -i "CLI taking action on ENV: $ENV"
		"$ENVROOT/bin/docker" $@
		exit
		;;

	-h | --help)
		usage
		exit
		;;

	*)
		usage
		exit 1
		;;
	esac
	shift
done
