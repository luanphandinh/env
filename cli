#!/usr/bin/env bash

# All available global variables
# Naming convention:
# Variables should be __<name>__
# Directory should be __<name>_dir__
# Exec file should be __<name>_exec__
# Variables
set -e
export ENVROOT=$(cd $(dirname $0) && pwd)
export CLI_VERSION=$(cat $ENVROOT/VERSION)
export __profile__="default"

# Directory
set -e
export __profiles_dir__=$ENVROOT/etc/profiles
export __var_log_dir__=$ENVROOT/var/log
export __var_lib_dir__=$ENVROOT/var/lib
export __var_mail_dir__=$ENVROOT/var/mail

# bin/**
set -e
export __docker_exec__=$ENVROOT/bin/docker
export __profile_exec__=$ENVROOT/bin/profile
export __log__=$ENVROOT/bin/log
export __debug__=$ENVROOT/bin/debug

# Export environment ports from etc/docker/
set -e
. "$ENVROOT/etc/docker/.PORT"

usage() {
	cli_name=${0##*/}
	echo "
$cli_name
your profile CLI
version: $CLI_VERSION
usage: $cli_name [options] [command [command's options]]

options:
	-p | --profile:    Profile that cli with take action on.
	-d | --debug:      Turn on debug mode.

	-h | --help:       Help.

commands:
    docker:     Up and running dockers container
                All possible containers a listed in etc/docker
                Will create volume for corresponding containers in proc/<ENV>/docker

    profile:	Config profile.
"
	exit 1
}

apply_profile_config() {
	export __profile_config_file__=$ENVROOT/etc/profiles/$__profile__
	set -e
	. "$__profile_config_file__"

	$__debug__ "EXPORT ENV from profile: $__profile__"
	$__debug__ `cat $__profile_config_file__`
}

while [ "$1" != "" ]; do
	case $1 in
	-p | --profile)
		shift
		set -e
		export __profile__=$1
		;;

	-d | --debug)
		set -e
		export DEBUG=1
		;;

	docker)
		shift
		apply_profile_config
		$__log__ -i "CLI running on profile: $__profile__"
		# $__docker_exec__ $@
		exit
		;;

	profile)
		shift
		$__profile_exec__ $@
		exit
		;;

	-h | --help)
		usage
		exit
		;;

	*)
		usage
		exit 1
		;;
	esac
	shift
done
